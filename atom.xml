<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blah.io]]></title>
  <link href="http://blah.io/atom.xml" rel="self"/>
  <link href="http://blah.io/"/>
  <updated>2013-11-19T13:39:26+11:00</updated>
  <id>http://blah.io/</id>
  <author>
    <name><![CDATA[Stu Liston]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Silencing activerecord-postgis-adapter]]></title>
    <link href="http://blah.io/blog/2013/11/19/silencing-activerecord-postgis-adapter/"/>
    <updated>2013-11-19T13:26:00+11:00</updated>
    <id>http://blah.io/blog/2013/11/19/silencing-activerecord-postgis-adapter</id>
    <content type="html"><![CDATA[<p>A while back I spotted that the <code>activerecord-postgis-adapter</code> gem was making a fair bit of noise in  my rails console.</p>

<p>I was seeing lots of queries like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SELECT * FROM geometry_columns WHERE f_table_name='articles'
</span><span class='line'>SELECT * FROM geometry_columns WHERE f_table_name='comments'</span></code></pre></td></tr></table></div></figure>


<p>From what I understand about the issue, which is discussed <a href="https://github.com/dazuma/activerecord-postgis-adapter/issues/36">here</a> and <a href="https://github.com/dazuma/activerecord-postgis-adapter/issues/71">here</a>, this is a meta query to discover whether a particular table has geospatial columns.</p>

<p>I&rsquo;m plannning to reach out to the maintainer to see if I can help, but in the meantime I have a little patch to cut out the noise.</p>

<p>It&rsquo;s <em>possible</em> that you&rsquo;ll gain a performance boost in the process, but I haven&rsquo;t benchmarked it yet.</p>

<h3>The patch</h3>

<p>The monkeypatch involves altering the implementation of the offending <code>spatial_column_info</code> method so that it optionally eager-loads specified geospatial-aware tables from a setting in your <code>database.yml</code>.</p>

<p>If you <em>don&rsquo;t</em> provide any tables up-front in config, it&rsquo;ll fall back to discovering the details at runtime as it did before.</p>

<figure class='code'><figcaption><span>config/database.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">development</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># other config omittedâ€¦</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="l-Scalar-Plain">postgis_spacial_tables</span><span class="p-Indicator">:</span> <span class="s">&#39;articles,addresses,etc,etc&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>config/initializers/postgis_adapter_patch.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ActiveRecord</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ConnectionAdapters</span>
</span><span class='line'>    <span class="k">module</span> <span class="nn">PostGISAdapter</span>
</span><span class='line'>
</span><span class='line'>      <span class="no">MainAdapter</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">alias_method</span> <span class="ss">:original_spatial_column_info</span><span class="p">,</span> <span class="ss">:spatial_column_info</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">spatial_column_info</span><span class="p">(</span><span class="n">table_name_</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">_postgis_spacial_tables_configured?</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">_postgis_spacial_tables</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">table_name_</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">{}</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">original_spatial_column_info</span><span class="p">(</span><span class="n">table_name_</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">_postgis_spacial_tables_configured?</span>
</span><span class='line'>          <span class="n">_postgis_spacial_tables</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">def</span> <span class="nf">_postgis_spacial_tables</span>
</span><span class='line'>          <span class="vi">@_postgis_spacial_tables</span> <span class="o">||=</span> <span class="p">(</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">configurations</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">][</span><span class="s2">&quot;postgis_spacial_tables&quot;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Caveats</h3>

<ul>
<li><p>I only load this initialiser (and therefore the patch) in <code>development</code> mode. Although you&rsquo;re free to use it how you like, be warned that it&rsquo;s untested in production.</p></li>
<li><p>I use this against version <code>0.5.0</code> of the activerecord-postgis-adapter gem. As with a lot of monkeypatching, if the methods in the gem are renamed then this runs the risk of not working anymore</p></li>
</ul>


<h3>Happy patching!</h3>

<p>Please make a note in the comments if you have some improvements in either the information above or the implementation I&rsquo;m suggesting.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Protip: Filter by Introduced Diff]]></title>
    <link href="http://blah.io/blog/2013/11/17/git-protip-filter-by-introduced-diff/"/>
    <updated>2013-11-17T13:56:00+11:00</updated>
    <id>http://blah.io/blog/2013/11/17/git-protip-filter-by-introduced-diff</id>
    <content type="html"><![CDATA[<p>One of those Git commands you won&rsquo;t need regularly, but when you do, it&rsquo;ll save your day.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log -S</span></code></pre></td></tr></table></div></figure>


<p>What if you&rsquo;re tracking something down but you (or one of your colleagues) writes horrible commit messages?</p>

<p>Git blaming is really good for investigating who touched specific lines last, but you often find that the <em>last</em> change on any
specific line is not the one you&rsquo;re looking for. Maybe you want to find who introduced a method, but another colleague has formatted
the line since then.</p>

<p>Even tougher; perhaps what you&rsquo;re looking for is when a particular piece of code was <em>removed</em>.</p>

<p>Situations like these are when <strong>Filter by Introduced Diff</strong> comes to your rescue.</p>

<p>The command tells Git to look through the diff of each commit for a particular string. For example, if we wanted to find which commits modified
anything that looked like the function name <code>Squeryable_by</code>, we would run this: (note there is no <code>=</code> between the <code>-S</code> and what you are searching for)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git log -Squeryable_by
</span><span class='line'>
</span><span class='line'>commit 7fa49b6c8d18583a7a8279c5a50c056cc16f2857
</span><span class='line'>Author: Stuart Liston &lt;stuart.liston@gmail.com&gt;
</span><span class='line'>Date:   Wed Nov 13 15:17:12 2013 +1100
</span><span class='line'>
</span><span class='line'>    Update README.md
</span><span class='line'>
</span><span class='line'>commit 33b210008469fcc37a73516f6246a85398c72c3f
</span><span class='line'>Author: Stuart Liston &lt;stuart.liston@gmail.com&gt;
</span><span class='line'>Date:   Sun Nov 10 00:09:28 2013 +1100
</span><span class='line'>
</span><span class='line'>    Starting to spec-out the module's DSL</span></code></pre></td></tr></table></div></figure>


<p>You can see that I introduced a method on Nov 10 and then added some info to the README about the method (3 days later, YOLO!).</p>

<p>Hopefully that&rsquo;ll get you out of jail one day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing QueryAr]]></title>
    <link href="http://blah.io/blog/2013/11/10/introducing-queryar/"/>
    <updated>2013-11-10T19:59:00+11:00</updated>
    <id>http://blah.io/blog/2013/11/10/introducing-queryar</id>
    <content type="html"><![CDATA[<p>I&rsquo;d like to describe a small &ndash; and currently very focused &ndash; gem I&rsquo;ve been working on.</p>

<!-- more -->


<p><em>QueryAr gives you a concise DSL to confidently build filtered, scoped, paged and sorted ActiveRecord queries, based on a parameters hash.</em></p>

<h3>Really quick example:</h3>

<p>Given this ActiveRecord model:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:older_than</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">(</span><span class="n">years</span><span class="p">)</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;age &gt; ?&quot;</span><span class="p">,</span> <span class="n">years</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can declare a query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserQuery</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">QueryAr</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">defaults</span> <span class="n">sort_by</span><span class="p">:</span> <span class="s1">&#39;last_name&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">queryable_by</span>  <span class="ss">:first_name</span><span class="p">,</span> <span class="ss">:last_name</span>
</span><span class='line'>  <span class="n">scopeable_by</span>  <span class="ss">:older_than</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then use it to query your model safely and succinctly from controller params:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># GET /users</span>
</span><span class='line'><span class="c1"># params = { &quot;older_than&quot;=&gt;30, &quot;first_name&quot;=&gt;&quot;Stu&quot;, &quot;limit&quot;=&gt;5, &quot;offset&quot;=&gt;0 }</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="n">query</span> <span class="o">=</span> <span class="no">UserQuery</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>  <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="n">query</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Want to find out more?</h3>

<p>Head over to the project&rsquo;s home on <a href="https://github.com/hooroo/query_ar">GitHub</a> for the latest information. You&rsquo;re very welcome to make suggestions, ask for features or get involved!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Essential SublimeText Packages]]></title>
    <link href="http://blah.io/blog/2013/11/10/essential-sublimetext-packages/"/>
    <updated>2013-11-10T19:41:00+11:00</updated>
    <id>http://blah.io/blog/2013/11/10/essential-sublimetext-packages</id>
    <content type="html"><![CDATA[<p><a href="http://www.sublimetext.com/">SublimeText</a> is an excellent text editor. It&rsquo;s quick, light, extendable and does just enough to make you super productive then gets out of your way.</p>

<!-- more -->


<p>Using <a href="https://sublime.wbond.net/">Package Manager</a>, it&rsquo;s very easy to add extensions to the base SublimeText install.</p>

<p>For a great guide to getting SublimeText set up fully, check out Alex Maccaw&rsquo;s <a href="http://blog.alexmaccaw.com/sublime-text">blog post on the subject</a>. I&rsquo;ll deal with packages only.</p>

<p>Without further ado, here is my list:</p>

<ol>
<li><p><a href="https://sublime.wbond.net/packages/All%20Autocomplete"><strong>All Autocomplete</strong></a>
Sublime&rsquo;s autocomplete is wonderfully simple &ndash; by default it prompts you with any words in the current file. This package extends the default autocomplete to find matches in <em>all open files</em>.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/Git"><strong>Git</strong></a>
You can push, pull, diff and much more as you might expect. I have to admit, though, I only really use this package to <em>Git Blame</em> a file (or a highlighted section of a file) when I need to check out <em>who</em> authored a certain block of code and <em>when</em>. Event for that narrow use-case I&rsquo;d recommend it.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/Modific"><strong>Modific</strong></a>
Highlights lines changed since the last commit. Currently-supported are: Git, SVN, Bazaar and Mercurial. Very cool to be able to see where you&rsquo;ve deleted lines, added lines or modified existing ones with some simple iconography.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/Pretty%20JSON"><strong>PrettyJSON</strong></a>
Simple, really: you select some JSON, hit <code>cmd + shift + p</code> (to bring up the God menu) and start typing &lsquo;pretty&rsquo; until you can select &lsquo;PrettyJSON&rsquo;. That&rsquo;ll format the JSON for you.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/RubyTest"><strong>RubyTest</strong></a>
Like Git, I only really use one feature of this package. But it&rsquo;s a cracker. Assuming your spec and implementation files are organised in a predictable way, this give you a <code>cmd + .</code> shortcut that will jump you from the spec to the implementation and back again. If you&rsquo;re like me and like to TDD in two vertical columns, this is perfect.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/SideBarEnhancements"><strong>SideBarEnhancements</strong></a>
Gives you enhanced file and folder options. Good for moving things around rapidly.</p></li>
<li><p><a href="https://sublime.wbond.net/packages/Ruby%201.9%20Hash%20Converter"><strong>Ruby 1.9 Hash Converter</strong></a>
This is is pretty controversial, but I thought I&rsquo;d add it in as it&rsquo;s a great trolling tool. Gives you a shortcut <code>cmd + option + h</code> to convert all Ruby hashes in the current file to the new 1.9 syntax.</p></li>
</ol>


<p>Please get in touch if you know any hidden gems that I&rsquo;m missing!</p>
]]></content>
  </entry>
  
</feed>
